{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
    "storageSufix": {
    "type": "string",
    "metadata": {
        "description": "Sufix to storageAccount."
            }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "vm",
      "metadata": {
        "description": "Username for the Virtual Machine."
            }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
            }
        }
    },
    "functions": [],
    "variables": {
        "location": "[resourceGroup().location]", 
        "vmName1": "ubuntuVM1",
        "vmName2": "ubuntuVM2",
        "ubuntuOS": "18.04-LTS",
        "publicIP1": "[concat(variables('vmName1'), '-PublicIP')]",
        "publicIP2": "[concat(variables('vmName2'), '-PublicIP')]",
        "storageName": "[concat('storageaccount', parameters('storageSufix'))]",
        "nsgName": "ubuntuVM-nsg",
        "VirtualNetworkName": "ubuntuVM-VirtualNetwork",
        "interfaceName1": "[concat(variables('vmName1'), '-NetworkInterface')]",
        "interfaceName2": "[concat(variables('vmName2'), '')]",
        "subNetName": "[concat(variables('VirtualNetworkName'), '-Subnet')]",
        /*"_artifactsLocation": "https://raw.githubusercontent.com/elishani/Azure_ARM_template/master/scripts/",*/
        "_artifactsLocation": "https://raw.githubusercontent.com/elishani/terrafom/master/",
        "_artifactsLocationSasToken": ""
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageName')]",
            "apiVersion": "2019-06-01",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "[concat(variables('vmName1'),' Storage Account')]"
            },
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIP2')]",
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "tags": {
                "displayName": "PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "nsgRule1",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRanges": ["22", "80", "443"],
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('VirtualNetworkName')]", 
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "tags": {
                "displayName": "[variables('VirtualNetworkName')]"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subNetName')]",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {    
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('interfaceName2')]",
            "apiVersion": "2019-11-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP2'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('VirtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[variables('interfaceName2')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIP2'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('VirtualNetworkName'), variables('subNetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[variables('vmName2')]",
            "apiVersion": "2019-07-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName2'))]"
            ],
            "tags": {
                "displayName": "[variables('vmName2')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "Standard_A2_v2"
                },
                "osProfile": {
                    "computerName": "[variables('vmName2')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[variables('ubuntuOS')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmName2'), '-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('interfaceName2'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts/', variables('storageName'))).primaryEndpoints.blob]"
                    }
                }
            }
        },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName2'),'/newuserscript')]",
      "apiVersion": "2020-06-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', variables('vmName2'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(variables('_artifactsLocation'), concat('install_apache.sh', variables('_artifactsLocationSasToken')))]"
          ],
          "commandToExecute": "sh install_apache.sh"
        }
      }
    }
    ],
    "outputs": {}
}
